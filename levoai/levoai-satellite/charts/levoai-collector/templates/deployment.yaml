apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: levoai-collector
    release: {{ .Release.Name }}
spec:
  minReadySeconds: {{ .Values.minReadySeconds }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      {{- toYaml .Values.deploymentSelectorMatchLabels | nindent 6 }}
  template:
    metadata:
      annotations:
        # https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
        checksum/config: {{ .Values.config | toString | sha256sum }}
      labels:
        {{- toYaml .Values.podLabels | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}:{{ default .Chart.AppVersion .Values.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
            - "/usr/local/bin/levoai/collector"
            - "--config=/conf/levoai-collector-config.yaml"
          ports:
          {{ range $port := .Values.containerPorts }}
            - name: {{ $port.name }}
              containerPort: {{ $port.containerPort }}
          {{ end }}
        {{- with .Values.env }}
          env:
          {{- toYaml . | nindent 12}}
        {{- end }}
        {{- with .Values.volumeMounts }}
          volumeMounts:
          {{- toYaml . | nindent 12}}
        {{- end }}
          livenessProbe:
            initialDelaySeconds: {{ int .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ int .Values.livenessProbe.periodSeconds }}
            tcpSocket:
              port: {{ .Values.livenessProbe.port }}
          readinessProbe:
            initialDelaySeconds: {{ int .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ int .Values.readinessProbe.periodSeconds }}
            httpGet:
              path: /
              port: {{ .Values.readinessProbe.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
